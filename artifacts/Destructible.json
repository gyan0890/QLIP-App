{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "6080604052600080546001600160a01b0319163317905561025f806100256000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c57806383197ef0146100665780638da5cb5b1461006e578063f2fde38b1461009d578063f5074f41146100b0575b600080fd5b6100646100c3565b005b610064610122565b600054610081906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100646100ab3660046101fb565b610147565b6100646100be3660046101fb565b61016a565b6000546001600160a01b031633146100da57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a2600080546001600160a01b0319169055565b6000546001600160a01b0316331461013957600080fd5b6000546001600160a01b0316ff5b6000546001600160a01b0316331461015e57600080fd5b6101678161018d565b50565b6000546001600160a01b0316331461018157600080fd5b806001600160a01b0316ff5b6001600160a01b0381166101a057600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561020c578081fd5b81356001600160a01b0381168114610222578182fd5b939250505056fea2646970667358221220c6aef9c4593850e49a7f839a240fe416bba89d217b178d03bba1cf6842e6dbd464736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x25F DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x81 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x147 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x16A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x167 DUP2 PUSH2 0x18D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x222 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xAE 0xF9 0xC4 MSIZE CODESIZE POP 0xE4 SWAP11 PUSH32 0x839A240FE416BBA89D217B178D03BBA1CF6842E6DBD464736F6C634300080400 CALLER ",
			"sourceMap": "5481:337:0:-:0;;;3497:5;:27;;-1:-1:-1;;;;;;3497:27:0;3513:10;3497:27;;;5481:337;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:554:12",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:12",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "92:236:12",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "138:26:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "147:6:12"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:12"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "140:6:12"
															},
															"nodeType": "YulFunctionCall",
															"src": "140:22:12"
														},
														"nodeType": "YulExpressionStatement",
														"src": "140:22:12"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "113:7:12"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "122:9:12"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "109:3:12"
														},
														"nodeType": "YulFunctionCall",
														"src": "109:23:12"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "134:2:12",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "105:3:12"
												},
												"nodeType": "YulFunctionCall",
												"src": "105:32:12"
											},
											"nodeType": "YulIf",
											"src": "102:2:12"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "173:36:12",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "199:9:12"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "186:12:12"
												},
												"nodeType": "YulFunctionCall",
												"src": "186:23:12"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "177:5:12",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "272:26:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "281:6:12"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "289:6:12"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "274:6:12"
															},
															"nodeType": "YulFunctionCall",
															"src": "274:22:12"
														},
														"nodeType": "YulExpressionStatement",
														"src": "274:22:12"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "231:5:12"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "242:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "257:3:12",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "262:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "253:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "253:11:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "266:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "249:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "249:19:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "238:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:31:12"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "228:2:12"
														},
														"nodeType": "YulFunctionCall",
														"src": "228:42:12"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "221:6:12"
												},
												"nodeType": "YulFunctionCall",
												"src": "221:50:12"
											},
											"nodeType": "YulIf",
											"src": "218:2:12"
										},
										{
											"nodeType": "YulAssignment",
											"src": "307:15:12",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "317:5:12"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "307:6:12"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address_payable",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "58:9:12",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "69:7:12",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "81:6:12",
										"type": ""
									}
								],
								"src": "14:314:12"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "450:102:12",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "460:26:12",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "472:9:12"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "483:2:12",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "468:3:12"
												},
												"nodeType": "YulFunctionCall",
												"src": "468:18:12"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "460:4:12"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "502:9:12"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "517:6:12"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "533:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "538:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "542:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:19:12"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "513:3:12"
														},
														"nodeType": "YulFunctionCall",
														"src": "513:32:12"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "495:6:12"
												},
												"nodeType": "YulFunctionCall",
												"src": "495:51:12"
											},
											"nodeType": "YulExpressionStatement",
											"src": "495:51:12"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "419:9:12",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "430:6:12",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "441:4:12",
										"type": ""
									}
								],
								"src": "333:219:12"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
					"id": 12,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c57806383197ef0146100665780638da5cb5b1461006e578063f2fde38b1461009d578063f5074f41146100b0575b600080fd5b6100646100c3565b005b610064610122565b600054610081906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100646100ab3660046101fb565b610147565b6100646100be3660046101fb565b61016a565b6000546001600160a01b031633146100da57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a2600080546001600160a01b0319169055565b6000546001600160a01b0316331461013957600080fd5b6000546001600160a01b0316ff5b6000546001600160a01b0316331461015e57600080fd5b6101678161018d565b50565b6000546001600160a01b0316331461018157600080fd5b806001600160a01b0316ff5b6001600160a01b0381166101a057600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561020c578081fd5b81356001600160a01b0381168114610222578182fd5b939250505056fea2646970667358221220c6aef9c4593850e49a7f839a240fe416bba89d217b178d03bba1cf6842e6dbd464736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xF5074F41 EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x81 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x147 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x16A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x167 DUP2 PUSH2 0x18D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x222 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xAE 0xF9 0xC4 MSIZE CODESIZE POP 0xE4 SWAP11 PUSH32 0x839A240FE416BBA89D217B178D03BBA1CF6842E6DBD464736F6C634300080400 CALLER ",
			"sourceMap": "5481:337:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3766:120;;;:::i;:::-;;5642:66;;;:::i;3167:28::-;;;;;-1:-1:-1;;;;;3167:28:0;;;;;;-1:-1:-1;;;;;513:32:12;;;495:51;;483:2;468:18;3167:28:0;;;;;;;4048:111;;;;;;:::i;:::-;;:::i;5712:104::-;;;;;;:::i;:::-;;:::i;3766:120::-;3658:5;;-1:-1:-1;;;;;3658:5:0;3644:10;:19;3636:28;;;;;;3842:5:::1;::::0;;3823:25:::1;::::0;-1:-1:-1;;;;;3842:5:0;;::::1;::::0;3823:25:::1;::::0;::::1;3878:1;3854:27:::0;;-1:-1:-1;;;;;;3854:27:0::1;::::0;;3766:120::o;5642:66::-;3658:5;;-1:-1:-1;;;;;3658:5:0;3644:10;:19;3636:28;;;;;;5697:5:::1;::::0;-1:-1:-1;;;;;5697:5:0::1;5684:19;4048:111:::0;3658:5;;-1:-1:-1;;;;;3658:5:0;3644:10;:19;3636:28;;;;;;4125:29:::1;4144:9;4125:18;:29::i;:::-;4048:111:::0;:::o;5712:104::-;3658:5;;-1:-1:-1;;;;;3658:5:0;3644:10;:19;3636:28;;;;;;5800:10:::1;-1:-1:-1::0;;;;;5787:24:0::1;;4294:179:::0;-1:-1:-1;;;;;4372:23:0;;4364:32;;;;;;4428:5;;;4407:38;;-1:-1:-1;;;;;4407:38:0;;;;4428:5;;;4407:38;;;4451:5;:17;;-1:-1:-1;;;;;;4451:17:0;-1:-1:-1;;;;;4451:17:0;;;;;;;;;;4294:179::o;14:314:12:-;81:6;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;186:23;;-1:-1:-1;;;;;238:31:12;;228:42;;218:2;;289:6;281;274:22;218:2;317:5;92:236;-1:-1:-1;;;92:236:12:o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "121400",
				"executionCost": "20976",
				"totalCost": "142376"
			},
			"external": {
				"destroy()": "31796",
				"destroyAndSend(address)": "31185",
				"owner()": "1047",
				"renounceOwnership()": "23762",
				"transferOwnership(address)": "24438"
			}
		},
		"methodIdentifiers": {
			"destroy()": "83197ef0",
			"destroyAndSend(address)": "f5074f41",
			"owner()": "8da5cb5b",
			"renounceOwnership()": "715018a6",
			"transferOwnership(address)": "f2fde38b"
		}
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "payable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				}
			],
			"name": "OwnershipRenounced",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "destroy",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address payable",
					"name": "_recipient",
					"type": "address"
				}
			],
			"name": "destroyAndSend",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address payable",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address payable",
					"name": "_newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}